buildscript {
    repositories {
        jcenter()
        maven {
            url 'https://maven.google.com/'
            name 'Google'
        }
        google()
    }
    dependencies {
        if (rootProject.ext.has("gradle_classpath")) {
            classpath rootProject.ext.gradle_classpath
        } else {
            logger.warn('classpath not found in rootProject')
            classpath 'com.android.tools.build:gradle:3.1.3'
        }
    }
}

apply plugin: 'com.android.application'

android {

    if (rootProject.ext.has("implementationSdkVersion")) {
        implementationSdkVersion rootProject.ext.implementationSdkVersion
        buildToolsVersion rootProject.ext.buildToolsVersion

    } else {
        logger.warn('implementationSdkVersion not found in rootProject')
        compileSdkVersion = 27
        buildToolsVersion = "27.0.3"
    }

    defaultConfig {
        applicationId "de.j4velin.pedometer"
        vectorDrawables.useSupportLibrary = true
    }

    signingConfigs {
        release
    }

    flavorDimensions "main"

    productFlavors {
        play {
            dimension "main"
        }
        fdroid {
            dimension "main"
        }
    }

    buildTypes {
        release {
            signingConfig signingConfigs.release
            zipAlignEnabled true
            minifyEnabled true
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-project.txt'
        }
        debug {
            debuggable true
            signingConfig signingConfigs.release
            zipAlignEnabled true
            minifyEnabled false
        }
    }


}

allprojects {

    repositories {
        maven { url "https://jitpack.io" }
    }
}

repositories {
    maven { url "https://maven.google.com" }
    jcenter()
    google()
}

dependencies {
    implementation 'com.android.support:appcompat-v7:27.0.2'
    implementation 'com.android.support:design:27.0.2'
    implementation 'com.android.support.constraint:constraint-layout:1.0.2'
    implementation 'com.android.support:cardview-v7:27.0.2'
    implementation 'com.android.support:recyclerview-v7:27.0.2'

    implementation 'com.github.j4velin.colorpicker:colorpicker:1.20.6'
    implementation 'com.github.j4velin.EazeGraph:EazeGraph:1.0.2'
    implementation 'com.google.android.apps.dashclock:dashclock-api:2.0.0'
//    playCompile 'com.google.android.gms:play-services-fitness:11.8.0'
//    playCompile 'com.google.android.gms:play-services-games:11.8.0'
//    playCompile 'com.google.android.gms:play-services-identity:11.8.0'
    implementation 'com.google.android.gms:play-services-fitness:11.8.0'
    implementation 'com.google.android.gms:play-services-games:11.8.0'
    implementation 'com.google.android.gms:play-services-identity:11.8.0'

    implementation 'android.arch.persistence.room:runtime:1.0.0'
    annotationProcessor 'android.arch.persistence.room:compiler:1.0.0'

    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation 'com.github.clans:fab:1.6.4'
    implementation 'com.xiaochendev.progressroundbtn:library:2.0.0'
    implementation 'com.github.PhilJay:MPAndroidChart:v3.0.3'   //  to be removed
    implementation 'com.zekapp.library:progreswheelview:1.1.2'
}

def props = new Properties()

if (project.file("key.properties").exists()) {
    props.load(new FileInputStream(project.file("key.properties")))
} else {
    logger.warn('Using sample keystore!!')
    props.load(new FileInputStream(project.file("key.properties.sample")))
}

android.signingConfigs.release.storeFile rootProject.file(props.keyStore)

android.signingConfigs.release.storePassword props.keyStorePassword

android.signingConfigs.release.keyAlias props.keyAlias

android.signingConfigs.release.keyPassword props.keyAliasPassword
